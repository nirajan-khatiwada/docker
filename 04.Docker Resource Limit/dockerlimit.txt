Docker CPU and Memory Limits

When you want to control the CPU and memory usage of Docker containers, you can use specific options in both Docker CLI commands and Docker Compose files. 
Here's a detailed guide on how to use these options:


Docker CLI Commands
1. Setting CPU Limits:
Option: --cpus
Usage: Specifies the number of CPUs that the container can use.
Example:
docker run --cpus="1.5" my-image
This command limits the container to use up to 1.5 CPUs.

2. Setting Memory Limits:
Option: --memory or -m
Usage: Sets the maximum amount of memory the container can use.
Example:
docker run --memory="500m" my-image
This command limits the container to use up to 500 megabytes of RAM. If the container exceeds this limit, it may be throttled or terminated.

Docker Compose Configuration
In Docker Compose, you specify these limits in the docker-compose.yml file under the deploy section for version 3.x and above, or directly under the services
section for version 2.x.

1. Setting CPU and Memory Limits in Docker Compose (Version 2.x):

Example docker-compose.yml:
version: '2'
services:
  my-service:
    image: my-image
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 500M
In this configuration:
cpus: '1.5' limits the container to use up to 1.5 CPUs.
memory: 500M limits the container to use up to 500 megabytes of RAM.


2. Setting CPU and Memory Limits in Docker Compose (Version 3.x and above):
Example docker-compose.yml:
version: '3.8'
services:
  my-service:
    image: my-image
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: '500M'
In this configuration:
cpus: '1.5' limits the container to use up to 1.5 CPUs.
memory: '500M' limits the container to use up to 500 megabytes of RAM.
Notes:

In Docker Compose version 3.x and above, resource constraints are primarily used for swarm mode deployments. For standalone Docker Compose setups, resource constraints might not have an effect unless you're using Docker with specific configurations.
These options help you manage the resources your containers use, ensuring that they donâ€™t overwhelm your system and that they run efficiently within their allocated limits.
